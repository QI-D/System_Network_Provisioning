---
- hosts: localhost
  gather_facts: false
  tasks:
    - name: gather info about EC2 instance
      amazon.aws.ec2_instance_info:
        filters:
          instance-state-name: running
      register: ec2_info
      tags:
        - info
        - provision
        - test

    - name: print out URL to the application
      debug: { msg: "http://{{ ec2_info.instances.0.public_ip_address }}" }
      when: ec2_info.instances
      tags:
        - info

    - name: print out message when the machine is not running or doesn't exist
      debug: { msg: "The instance is not running or does not exist" }
      when: ec2_info.instances == []
      tags:
        - info

    - name: get info about RDS instance
      community.aws.rds_instance_info:
        db_instance_identifier: app-db
      register: aws_rds_info
      tags:
        - rds
        - provision

    - debug: { var: aws_rds_info.instances.0.endpoint.address }
      tags:
        - rds

- hosts: aws_ec2
  gather_facts: false
  tasks:
    - name: define db_host variable
      set_fact:
        db_host: "{{ hostvars[groups._DB.0].private_ip_address }}"
      tags:
        - provision
        - test
      when:
        - setup_local_db == true

    - debug: { var: db_host }
      tags:
        - test

    - name: include role database
      import_role:
        name: database
      tags:
        - provision
      when:
        - inventory_hostname in groups["_DB"]

    - name: include role application
      import_role:
        name: application
      tags:
        - provision
      when:
        - inventory_hostname in groups["_APP"]
